1.算法思想
第一步、选择基准元素：从数组中选择一个元素作为基准。
第二步、分割数组：将比基准小的元素放在基准的左边，比基准大的元素放在基准的右边。
第三步、递归排序：对基准左边和右边的子数组分别进行快速排序。
重复步骤一至三，直到子数组的长度为1或0。

2.算法分析
2.1时间复杂度
最优情况：当每次选择的基准元素正好将数组分成两等分时，快速排序的时间复杂度是
O(nlogn)。
-最坏情况：当每次选择的基准元素是最大或最小元素时，快速排序的时间复杂度是O(n^ 2)
平均情况：在平均情况下，快速排序的时间复杂度也是O(nlogn)。

2.2空间复杂度
快速排序的空间复杂度是O(log),因为在递归调用中需要使用栈来存储中间结果。这意味着
在排序过程中，最多需要O(log)的额外空间来保存递归调用的栈帧。